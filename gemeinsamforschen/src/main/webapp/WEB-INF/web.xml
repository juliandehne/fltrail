<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
    <display-name>Gemeinsam Forschen</display-name>

    <servlet>
        <!--suppress ServletWithoutMappingInspection -->
        <servlet-name>rest-server</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>unipotsdam.gf</param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>
                unipotsdam.gf, com.fasterxml.jackson.jaxrs.json
            </param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.classnames</param-name>
            <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
        </init-param>

        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>unipotsdam.gf.config.GFResourceConfig</param-value>
        </init-param>
        <!--       <init-param>
                   <param-name>com.sun.jersey.config.feature.DisableWADL</param-name>
                   <param-value>true</param-value>
               </init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>rest-server</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>SessionValidatorFilter</filter-name> <!-- mandatory -->
        <filter-class>unipotsdam.gf.session.SessionExistsFilter</filter-class> <!-- mandatory -->
    </filter>

    <filter-mapping>
        <filter-name>SessionValidatorFilter</filter-name> <!-- mandatory -->
        <url-pattern>/project/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/groupfinding/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/annotation/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/feedback/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/journal/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/profile/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/researchReport/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/assessment/*</url-pattern> <!-- either url-pattern or servlet-name is mandatory -->
        <url-pattern>/portfolio/*</url-pattern>
        <url-pattern>/reflection/*</url-pattern>
        <url-pattern>/taglibs/jsp/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>AnnotationAlreadyDoneFilter</filter-name>
        <filter-class>unipotsdam.gf.session.AnnotationAlreadyDoneFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>AnnotationAlreadyDoneFilter</filter-name>
        <url-pattern>/annotation/*</url-pattern>
    </filter-mapping>
    
    <listener>
        <description>Logs the user out of rocket chat if rocket chat session is done</description>
        <listener-class>unipotsdam.gf.session.RocketChatSessionListener</listener-class>
    </listener>
    
    <listener>
        <description>This is called on deploy or shutdown, to logout alle existing sessions</description>
        <listener-class>unipotsdam.gf.session.TomcatListener</listener-class>
    </listener>

    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,DELETE,POST,HEAD,OPTIONS,PUT</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.headers</param-name>
            <param-value>
                Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
            </param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposed.headers</param-name>
            <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
        </init-param>
        <init-param>
            <param-name>cors.support.credentials</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>cors.preflight.maxage</param-name>
            <param-value>10</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>